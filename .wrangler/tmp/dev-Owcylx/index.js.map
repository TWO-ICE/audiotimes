{
  "version": 3,
  "sources": ["../bundle-auNAlC/checked-fetch.js", "../bundle-auNAlC/strip-cf-connecting-ip-header.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-auNAlC/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-auNAlC/middleware-loader.entry.ts"],
  "sourceRoot": "D:\\git\\audiotime\\.wrangler\\tmp\\dev-Owcylx",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/**\n * Audio Duration Detection API for Cloudflare Workers\n * \u57FA\u4E8EHTML\u5DE5\u5177\u7684\u97F3\u9891\u89E3\u6790\u903B\u8F91\u79FB\u690D\u5230\u670D\u52A1\u7AEF\n */\n\n// CORS \u5934\u90E8\u914D\u7F6E\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-API-Token',\n  'Access-Control-Max-Age': '86400',\n};\n\n// \u652F\u6301\u7684\u97F3\u9891\u683C\u5F0F\nconst SUPPORTED_FORMATS = [\n  'audio/mpeg', 'audio/mp3',\n  'audio/wav', 'audio/wave',\n  'audio/ogg', 'audio/vorbis',\n  'audio/aac', 'audio/mp4',\n  'audio/flac', 'audio/x-flac',\n  'audio/webm', 'audio/x-m4a'\n];\n\nexport default {\n  async fetch(request, env, ctx) {\n    // \u5904\u7406 CORS \u9884\u68C0\u8BF7\u6C42\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 200,\n        headers: corsHeaders\n      });\n    }\n\n    const url = new URL(request.url);\n    const path = url.pathname;\n\n    try {\n      // API \u8DEF\u7531 - \u9700\u8981token\u9A8C\u8BC1\n      if (path === '/api/duration' && request.method === 'POST') {\n        // \u9A8C\u8BC1token\n        const authResult = await validateToken(request, env);\n        if (!authResult.valid) {\n          return new Response(JSON.stringify({\n            error: 'Unauthorized',\n            message: authResult.message\n          }), {\n            status: 401,\n            headers: {\n              'Content-Type': 'application/json',\n              ...corsHeaders\n            }\n          });\n        }\n        \n        return await handleAudioDuration(request);\n      }\n      \n      // \u65B0\u589E\uFF1A\u901A\u8FC7URL\u83B7\u53D6\u97F3\u9891\u65F6\u957F\u7684API\u7AEF\u70B9\n      if (path === '/api/duration-url' && (request.method === 'POST' || request.method === 'GET')) {\n        // \u9A8C\u8BC1token\n        const authResult = await validateToken(request, env);\n        if (!authResult.valid) {\n          return new Response(JSON.stringify({\n            error: 'Unauthorized',\n            message: authResult.message\n          }), {\n            status: 401,\n            headers: {\n              'Content-Type': 'application/json',\n              ...corsHeaders\n            }\n          });\n        }\n        \n        return await handleAudioDurationFromUrl(request);\n      }\n      \n      // \u6839\u8DEF\u5F84\u8FD4\u56DEAPI\u6587\u6863\n      if (path === '/' && request.method === 'GET') {\n        return new Response(getApiDocumentation(), {\n          headers: {\n            'Content-Type': 'text/html; charset=utf-8',\n            ...corsHeaders\n          }\n        });\n      }\n\n      // \u5065\u5EB7\u68C0\u67E5\u7AEF\u70B9\n      if (path === '/health' && request.method === 'GET') {\n        return new Response(JSON.stringify({\n          status: 'ok',\n          timestamp: new Date().toISOString(),\n          service: 'audio-duration-api'\n        }), {\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        });\n      }\n\n      // 404 \u5904\u7406\n      return new Response(JSON.stringify({\n        error: 'Not Found',\n        message: 'API endpoint not found',\n        availableEndpoints: [\n          'POST /api/duration - \u4E0A\u4F20\u97F3\u9891\u6587\u4EF6\u83B7\u53D6\u65F6\u957F',\n        'POST/GET /api/duration-url - \u901A\u8FC7URL\u83B7\u53D6\u8FDC\u7A0B\u97F3\u9891\u65F6\u957F',\n        'GET /health - \u5065\u5EB7\u68C0\u67E5',\n        'GET / - API\u6587\u6863'\n        ]\n      }), {\n        status: 404,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n\n    } catch (error) {\n      console.error('API Error:', error);\n      return new Response(JSON.stringify({\n        error: 'Internal Server Error',\n        message: error.message\n      }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n  }\n};\n\n/**\n * \u5904\u7406\u901A\u8FC7URL\u83B7\u53D6\u97F3\u9891\u65F6\u957F\u7684\u8BF7\u6C42\n */\nasync function handleAudioDurationFromUrl(request) {\n  try {\n    let audioUrl;\n    let precisionMode = 'simple';\n    \n    // \u6839\u636E\u8BF7\u6C42\u65B9\u6CD5\u83B7\u53D6\u53C2\u6570\n    if (request.method === 'GET') {\n      const url = new URL(request.url);\n      audioUrl = url.searchParams.get('url');\n      precisionMode = url.searchParams.get('precision') || 'simple';\n    } else if (request.method === 'POST') {\n      const contentType = request.headers.get('content-type') || '';\n      \n      if (contentType.includes('application/json')) {\n        const body = await request.json();\n        audioUrl = body.url;\n        precisionMode = body.precision || 'simple';\n      } else if (contentType.includes('multipart/form-data')) {\n        const formData = await request.formData();\n        audioUrl = formData.get('url');\n        precisionMode = formData.get('precision') || 'simple';\n      } else {\n        return new Response(JSON.stringify({\n          error: 'Bad Request',\n          message: 'Content-Type must be application/json or multipart/form-data for POST requests'\n        }), {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        });\n      }\n    }\n    \n    // \u9A8C\u8BC1URL\u53C2\u6570\n    if (!audioUrl) {\n      return new Response(JSON.stringify({\n        error: 'Bad Request',\n        message: 'Missing required parameter: url'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // \u9A8C\u8BC1URL\u683C\u5F0F\n    const urlValidation = validateAudioUrl(audioUrl);\n    if (!urlValidation.valid) {\n      return new Response(JSON.stringify({\n        error: 'Bad Request',\n        message: urlValidation.message\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // \u4E0B\u8F7D\u8FDC\u7A0B\u97F3\u9891\u6587\u4EF6\n    const downloadResult = await downloadAudioFile(audioUrl);\n    if (!downloadResult.success) {\n      return new Response(JSON.stringify({\n        error: 'Download Error',\n        message: downloadResult.message\n      }), {\n        status: downloadResult.status || 500,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // \u521B\u5EFA\u865A\u62DF\u6587\u4EF6\u5BF9\u8C61\n    const audioFile = {\n      name: getFilenameFromUrl(audioUrl),\n      type: downloadResult.contentType,\n      size: downloadResult.arrayBuffer.byteLength,\n      arrayBuffer: () => Promise.resolve(downloadResult.arrayBuffer)\n    };\n    \n    // \u9A8C\u8BC1\u6587\u4EF6\u7C7B\u578B\n    if (!SUPPORTED_FORMATS.includes(audioFile.type)) {\n      return new Response(JSON.stringify({\n        error: 'Unsupported Format',\n        message: `Unsupported audio format: ${audioFile.type}`,\n        supportedFormats: SUPPORTED_FORMATS\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // \u68C0\u67E5\u6587\u4EF6\u5927\u5C0F\uFF08\u9650\u5236\u4E3A50MB\uFF09\n    const maxSize = 50 * 1024 * 1024; // 50MB\n    if (audioFile.size > maxSize) {\n      return new Response(JSON.stringify({\n        error: 'File Too Large',\n        message: `File size exceeds limit. Maximum allowed: ${formatFileSize(maxSize)}`,\n        fileSize: formatFileSize(audioFile.size)\n      }), {\n        status: 413,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // \u83B7\u53D6\u97F3\u9891\u65F6\u957F\n    const duration = await getAudioDurationFromBuffer(downloadResult.arrayBuffer, audioFile.type);\n    \n    // \u8F6C\u6362\u4E3A\u5FAE\u79D2\u683C\u5F0F (1\u79D2 = 1000000\u5FAE\u79D2)\n    const durationMicroseconds = Math.round(duration * 1000000);\n    \n    // \u683C\u5F0F\u5316\u65F6\u957F\n    const formattedDuration = formatDuration(duration, precisionMode);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        url: audioUrl,\n        filename: audioFile.name,\n        fileSize: formatFileSize(audioFile.size),\n        mimeType: audioFile.type,\n        duration: durationMicroseconds, // \u5FAE\u79D2\u683C\u5F0F\u7684\u65F6\u957F\n        formatted: formattedDuration, // \u683C\u5F0F\u5316\u540E\u7684\u65F6\u957F\u5B57\u7B26\u4E32\n        precision: precisionMode,\n        timelines: [\n          {\n            start: 0,\n            end: durationMicroseconds\n          }\n        ],\n        all_timelines: [\n          {\n            start: 0,\n            end: durationMicroseconds\n          }\n        ],\n        timestamp: new Date().toISOString()\n      }\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders\n      }\n    });\n    \n  } catch (error) {\n    console.error('URL audio processing error:', error);\n    return new Response(JSON.stringify({\n      error: 'Processing Error',\n      message: error.message || 'Failed to process remote audio file'\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders\n      }\n    });\n  }\n}\n\n/**\n * \u5904\u7406\u97F3\u9891\u65F6\u957F\u68C0\u6D4B\u8BF7\u6C42\n */\nasync function handleAudioDuration(request) {\n  try {\n    const contentType = request.headers.get('content-type') || '';\n    \n    if (!contentType.includes('multipart/form-data')) {\n      return new Response(JSON.stringify({\n        error: 'Bad Request',\n        message: 'Content-Type must be multipart/form-data'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n\n    const formData = await request.formData();\n    const audioFile = formData.get('audio');\n    const precisionMode = formData.get('precision') || 'simple'; // simple \u6216 precise\n\n    if (!audioFile || !(audioFile instanceof File)) {\n      return new Response(JSON.stringify({\n        error: 'Bad Request',\n        message: 'No audio file provided. Please upload a file with field name \"audio\"'\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n\n    // \u9A8C\u8BC1\u6587\u4EF6\u7C7B\u578B\n    if (!SUPPORTED_FORMATS.includes(audioFile.type)) {\n      return new Response(JSON.stringify({\n        error: 'Unsupported Format',\n        message: `Unsupported audio format: ${audioFile.type}`,\n        supportedFormats: SUPPORTED_FORMATS\n      }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n\n    // \u68C0\u67E5\u6587\u4EF6\u5927\u5C0F\uFF08\u9650\u5236\u4E3A50MB\uFF09\n    const maxSize = 50 * 1024 * 1024; // 50MB\n    if (audioFile.size > maxSize) {\n      return new Response(JSON.stringify({\n        error: 'File Too Large',\n        message: `File size exceeds limit. Maximum allowed: ${formatFileSize(maxSize)}`,\n        fileSize: formatFileSize(audioFile.size)\n      }), {\n        status: 413,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n\n    // \u83B7\u53D6\u97F3\u9891\u65F6\u957F\n    const duration = await getAudioDuration(audioFile);\n    \n    // \u8F6C\u6362\u4E3A\u5FAE\u79D2\u683C\u5F0F (1\u79D2 = 1000000\u5FAE\u79D2)\n    const durationMicroseconds = Math.round(duration * 1000000);\n    \n    // \u683C\u5F0F\u5316\u65F6\u957F\n    const formattedDuration = formatDuration(duration, precisionMode);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        filename: audioFile.name,\n        fileSize: formatFileSize(audioFile.size),\n        mimeType: audioFile.type,\n        duration: durationMicroseconds, // \u5FAE\u79D2\u683C\u5F0F\u7684\u65F6\u957F\n        formatted: formattedDuration, // \u683C\u5F0F\u5316\u540E\u7684\u65F6\u957F\u5B57\u7B26\u4E32\n        precision: precisionMode,\n        timelines: [\n          {\n            start: 0,\n            end: durationMicroseconds\n          }\n        ],\n        all_timelines: [\n          {\n            start: 0,\n            end: durationMicroseconds\n          }\n        ],\n        timestamp: new Date().toISOString()\n      }\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders\n      }\n    });\n\n  } catch (error) {\n    console.error('Audio processing error:', error);\n    return new Response(JSON.stringify({\n      error: 'Processing Error',\n      message: error.message || 'Failed to process audio file'\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        ...corsHeaders\n      }\n    });\n  }\n}\n\n/**\n * \u9A8C\u8BC1\u97F3\u9891URL\n */\nfunction validateAudioUrl(url) {\n  try {\n    const urlObj = new URL(url);\n    \n    // \u68C0\u67E5\u534F\u8BAE\n    if (!['http:', 'https:'].includes(urlObj.protocol)) {\n      return {\n        valid: false,\n        message: 'Only HTTP and HTTPS protocols are supported'\n      };\n    }\n    \n    // \u68C0\u67E5\u6587\u4EF6\u6269\u5C55\u540D\n    const pathname = urlObj.pathname.toLowerCase();\n    const supportedExtensions = ['.mp3', '.wav', '.ogg', '.aac', '.flac', '.m4a', '.webm'];\n    const hasValidExtension = supportedExtensions.some(ext => pathname.endsWith(ext));\n    \n    if (!hasValidExtension) {\n      return {\n        valid: false,\n        message: `URL must point to a supported audio file. Supported extensions: ${supportedExtensions.join(', ')}`\n      };\n    }\n    \n    return {\n      valid: true,\n      message: 'URL is valid'\n    };\n  } catch (error) {\n    return {\n      valid: false,\n      message: 'Invalid URL format'\n    };\n  }\n}\n\n/**\n * \u4E0B\u8F7D\u8FDC\u7A0B\u97F3\u9891\u6587\u4EF6\n */\nasync function downloadAudioFile(url) {\n  try {\n    // \u8BBE\u7F6E\u8BF7\u6C42\u8D85\u65F6\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30\u79D2\u8D85\u65F6\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      signal: controller.signal,\n      headers: {\n        'User-Agent': 'Audio-Duration-API/1.0'\n      }\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      return {\n        success: false,\n        message: `Failed to download file: HTTP ${response.status} ${response.statusText}`,\n        status: response.status\n      };\n    }\n    \n    // \u68C0\u67E5Content-Type\n    const contentType = response.headers.get('content-type') || '';\n    const isAudioType = SUPPORTED_FORMATS.some(format => contentType.includes(format.split('/')[1]));\n    \n    if (!isAudioType) {\n      // \u5C1D\u8BD5\u6839\u636EURL\u6269\u5C55\u540D\u63A8\u65ADMIME\u7C7B\u578B\n      const inferredType = inferMimeTypeFromUrl(url);\n      if (!inferredType) {\n        return {\n          success: false,\n          message: `Invalid content type: ${contentType}. Expected audio file.`,\n          status: 400\n        };\n      }\n    }\n    \n    // \u68C0\u67E5Content-Length\n    const contentLength = response.headers.get('content-length');\n    const maxSize = 50 * 1024 * 1024; // 50MB\n    \n    if (contentLength && parseInt(contentLength) > maxSize) {\n      return {\n        success: false,\n        message: `File too large: ${formatFileSize(parseInt(contentLength))}. Maximum allowed: ${formatFileSize(maxSize)}`,\n        status: 413\n      };\n    }\n    \n    // \u4E0B\u8F7D\u6587\u4EF6\u5185\u5BB9\n    const arrayBuffer = await response.arrayBuffer();\n    \n    // \u518D\u6B21\u68C0\u67E5\u5B9E\u9645\u6587\u4EF6\u5927\u5C0F\n    if (arrayBuffer.byteLength > maxSize) {\n      return {\n        success: false,\n        message: `File too large: ${formatFileSize(arrayBuffer.byteLength)}. Maximum allowed: ${formatFileSize(maxSize)}`,\n        status: 413\n      };\n    }\n    \n    return {\n      success: true,\n      arrayBuffer: arrayBuffer,\n      contentType: contentType || inferMimeTypeFromUrl(url) || 'audio/mpeg'\n    };\n    \n  } catch (error) {\n    if (error.name === 'AbortError') {\n      return {\n        success: false,\n        message: 'Download timeout (30 seconds)',\n        status: 408\n      };\n    }\n    \n    return {\n      success: false,\n      message: `Download failed: ${error.message}`,\n      status: 500\n    };\n  }\n}\n\n/**\n * \u4ECEURL\u63A8\u65ADMIME\u7C7B\u578B\n */\nfunction inferMimeTypeFromUrl(url) {\n  const pathname = url.toLowerCase();\n  \n  if (pathname.endsWith('.mp3')) return 'audio/mpeg';\n  if (pathname.endsWith('.wav')) return 'audio/wav';\n  if (pathname.endsWith('.ogg')) return 'audio/ogg';\n  if (pathname.endsWith('.aac')) return 'audio/aac';\n  if (pathname.endsWith('.flac')) return 'audio/flac';\n  if (pathname.endsWith('.m4a')) return 'audio/mp4';\n  if (pathname.endsWith('.webm')) return 'audio/webm';\n  \n  return null;\n}\n\n/**\n * \u4ECEURL\u63D0\u53D6\u6587\u4EF6\u540D\n */\nfunction getFilenameFromUrl(url) {\n  try {\n    const urlObj = new URL(url);\n    const pathname = urlObj.pathname;\n    const filename = pathname.split('/').pop() || 'audio';\n    return filename;\n  } catch (error) {\n    return 'audio';\n  }\n}\n\n/**\n * \u83B7\u53D6\u97F3\u9891\u65F6\u957F\uFF08\u79FB\u690D\u81EAHTML\u5DE5\u5177\u7684\u903B\u8F91\uFF09\n * \u5728Cloudflare Workers\u73AF\u5883\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528Web Audio API\u7684\u66FF\u4EE3\u65B9\u6848\n */\nasync function getAudioDuration(file) {\n  try {\n    // \u5728Workers\u73AF\u5883\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u89E3\u6790\u97F3\u9891\u6587\u4EF6\u7684\u5143\u6570\u636E\n    // \u8FD9\u91CC\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5316\u7248\u672C\uFF0C\u4E3B\u8981\u652F\u6301\u5E38\u89C1\u683C\u5F0F\n    const arrayBuffer = await file.arrayBuffer();\n    \n    // \u5C1D\u8BD5\u89E3\u6790\u4E0D\u540C\u683C\u5F0F\u7684\u97F3\u9891\u6587\u4EF6\n    if (file.type.includes('mp3') || file.type.includes('mpeg')) {\n      return await parseMp3Duration(arrayBuffer);\n    } else if (file.type.includes('wav')) {\n      return await parseWavDuration(arrayBuffer);\n    } else if (file.type.includes('ogg')) {\n      return await parseOggDuration(arrayBuffer);\n    } else {\n      // \u5BF9\u4E8E\u5176\u4ED6\u683C\u5F0F\uFF0C\u5C1D\u8BD5\u901A\u7528\u89E3\u6790\n      return await parseGenericAudioDuration(arrayBuffer, file.type);\n    }\n  } catch (error) {\n    throw new Error(`Failed to parse audio duration: ${error.message}`);\n  }\n}\n\n/**\n * \u4ECEArrayBuffer\u83B7\u53D6\u97F3\u9891\u65F6\u957F\uFF08\u7528\u4E8EURL\u4E0B\u8F7D\u7684\u6587\u4EF6\uFF09\n */\nasync function getAudioDurationFromBuffer(arrayBuffer, mimeType) {\n  try {\n    // \u5C1D\u8BD5\u89E3\u6790\u4E0D\u540C\u683C\u5F0F\u7684\u97F3\u9891\u6587\u4EF6\n    if (mimeType.includes('mp3') || mimeType.includes('mpeg')) {\n      return await parseMp3Duration(arrayBuffer);\n    } else if (mimeType.includes('wav')) {\n      return await parseWavDuration(arrayBuffer);\n    } else if (mimeType.includes('ogg')) {\n      return await parseOggDuration(arrayBuffer);\n    } else {\n      // \u5BF9\u4E8E\u5176\u4ED6\u683C\u5F0F\uFF0C\u5C1D\u8BD5\u901A\u7528\u89E3\u6790\n      return await parseGenericAudioDuration(arrayBuffer, mimeType);\n    }\n  } catch (error) {\n    throw new Error(`Failed to parse audio duration: ${error.message}`);\n  }\n}\n\n/**\n * \u89E3\u6790MP3\u6587\u4EF6\u65F6\u957F\n */\nasync function parseMp3Duration(arrayBuffer) {\n  const view = new DataView(arrayBuffer);\n  \n  // \u67E5\u627EID3v2\u6807\u7B7E\uFF08\u5982\u679C\u5B58\u5728\uFF09\n  let dataStart = 0;\n  if (view.getUint8(0) === 0x49 && view.getUint8(1) === 0x44 && view.getUint8(2) === 0x33) {\n    // ID3v2\u6807\u7B7E\u5B58\u5728\uFF0C\u8DF3\u8FC7\u5B83\n    const tagSize = ((view.getUint8(6) & 0x7F) << 21) |\n                   ((view.getUint8(7) & 0x7F) << 14) |\n                   ((view.getUint8(8) & 0x7F) << 7) |\n                   (view.getUint8(9) & 0x7F);\n    dataStart = 10 + tagSize;\n  }\n  \n  // \u67E5\u627EID3v1\u6807\u7B7E\uFF08\u6587\u4EF6\u672B\u5C3E128\u5B57\u8282\uFF09\n  let dataEnd = arrayBuffer.byteLength;\n  if (arrayBuffer.byteLength >= 128) {\n    const tagStart = arrayBuffer.byteLength - 128;\n    const tagHeader = String.fromCharCode(...new Uint8Array(arrayBuffer, tagStart, 3));\n    if (tagHeader === 'TAG') {\n      dataEnd = tagStart;\n    }\n  }\n  \n  // \u67E5\u627E\u7B2C\u4E00\u4E2A\u6709\u6548\u7684MP3\u5E27\u5934\n  for (let i = dataStart; i < Math.min(dataStart + 8192, view.byteLength - 4); i++) {\n    if (view.getUint8(i) === 0xFF && (view.getUint8(i + 1) & 0xE0) === 0xE0) {\n      const header = view.getUint32(i, false);\n      const frameInfo = parseMp3FrameHeader(header);\n      \n      if (frameInfo && frameInfo.bitrate > 0 && frameInfo.sampleRate > 0) {\n        // \u8BA1\u7B97\u5B9E\u9645\u97F3\u9891\u6570\u636E\u5927\u5C0F\n        const audioDataSize = dataEnd - dataStart;\n        \n        // \u4F7F\u7528\u6BD4\u7279\u7387\u8BA1\u7B97\u65F6\u957F\uFF08\u66F4\u51C6\u786E\u7684\u65B9\u6CD5\uFF09\n        // \u65F6\u957F = \u97F3\u9891\u6570\u636E\u5927\u5C0F(\u5B57\u8282) * 8 / \u6BD4\u7279\u7387(bps)\n        const duration = (audioDataSize * 8) / frameInfo.bitrate;\n        \n        return duration;\n      }\n    }\n  }\n  \n  throw new Error('Invalid MP3 file format');\n}\n\n/**\n * \u89E3\u6790WAV\u6587\u4EF6\u65F6\u957F\n */\nasync function parseWavDuration(arrayBuffer) {\n  const view = new DataView(arrayBuffer);\n  \n  // \u68C0\u67E5WAV\u6587\u4EF6\u5934\n  const riff = String.fromCharCode(...new Uint8Array(arrayBuffer, 0, 4));\n  const wave = String.fromCharCode(...new Uint8Array(arrayBuffer, 8, 4));\n  \n  if (riff !== 'RIFF' || wave !== 'WAVE') {\n    throw new Error('Invalid WAV file format');\n  }\n  \n  // \u67E5\u627Efmt chunk\n  let offset = 12;\n  while (offset < view.byteLength - 8) {\n    const chunkId = String.fromCharCode(...new Uint8Array(arrayBuffer, offset, 4));\n    const chunkSize = view.getUint32(offset + 4, true);\n    \n    if (chunkId === 'fmt ') {\n      const sampleRate = view.getUint32(offset + 12, true);\n      const byteRate = view.getUint32(offset + 16, true);\n      \n      // \u67E5\u627Edata chunk\n      let dataOffset = offset + 8 + chunkSize;\n      while (dataOffset < view.byteLength - 8) {\n        const dataChunkId = String.fromCharCode(...new Uint8Array(arrayBuffer, dataOffset, 4));\n        const dataChunkSize = view.getUint32(dataOffset + 4, true);\n        \n        if (dataChunkId === 'data') {\n          // \u8BA1\u7B97\u65F6\u957F\uFF1A\u6570\u636E\u5927\u5C0F / \u5B57\u8282\u7387\n          const duration = dataChunkSize / byteRate;\n          return duration;\n        }\n        \n        dataOffset += 8 + dataChunkSize;\n      }\n      break;\n    }\n    \n    offset += 8 + chunkSize;\n  }\n  \n  throw new Error('Invalid WAV file structure');\n}\n\n/**\n * \u89E3\u6790OGG\u6587\u4EF6\u65F6\u957F\n */\nasync function parseOggDuration(arrayBuffer) {\n  const view = new DataView(arrayBuffer);\n  \n  // \u68C0\u67E5OGG\u6587\u4EF6\u5934\n  const oggSignature = String.fromCharCode(...new Uint8Array(arrayBuffer, 0, 4));\n  if (oggSignature !== 'OggS') {\n    throw new Error('Invalid OGG file format');\n  }\n  \n  // \u67E5\u627E\u6700\u540E\u4E00\u4E2AOGG\u9875\u9762\u6765\u83B7\u53D6\u603B\u6837\u672C\u6570\n  let lastGranulePosition = 0;\n  let sampleRate = 48000; // \u9ED8\u8BA4\u91C7\u6837\u7387\n  \n  // \u4ECE\u6587\u4EF6\u672B\u5C3E\u5411\u524D\u641C\u7D22\u6700\u540E\u4E00\u4E2AOGG\u9875\u9762\n  for (let i = view.byteLength - 65536; i >= 0; i -= 1024) {\n    const searchStart = Math.max(0, i);\n    const searchEnd = Math.min(view.byteLength - 4, searchStart + 65536);\n    \n    for (let j = searchEnd - 4; j >= searchStart; j--) {\n      if (view.getUint8(j) === 0x4F && view.getUint8(j + 1) === 0x67 && \n          view.getUint8(j + 2) === 0x67 && view.getUint8(j + 3) === 0x53) {\n        // \u627E\u5230OGG\u9875\u9762\u5934\n        if (j + 26 < view.byteLength) {\n          // \u8BFB\u53D6granule position\uFF088\u5B57\u8282\uFF0C\u5C0F\u7AEF\u5E8F\uFF09\n          const granuleLow = view.getUint32(j + 6, true);\n          const granuleHigh = view.getUint32(j + 10, true);\n          const granulePosition = granuleLow + (granuleHigh * 0x100000000);\n          \n          if (granulePosition > lastGranulePosition) {\n            lastGranulePosition = granulePosition;\n          }\n        }\n      }\n    }\n    \n    if (lastGranulePosition > 0) break;\n  }\n  \n  // \u5C1D\u8BD5\u4ECEVorbis\u5934\u90E8\u83B7\u53D6\u91C7\u6837\u7387\n  for (let i = 0; i < Math.min(8192, view.byteLength - 30); i++) {\n    if (view.getUint8(i) === 0x01 && \n        String.fromCharCode(...new Uint8Array(arrayBuffer, i + 1, 6)) === 'vorbis') {\n      // \u627E\u5230Vorbis\u8BC6\u522B\u5934\n      if (i + 15 < view.byteLength) {\n        sampleRate = view.getUint32(i + 12, true);\n        break;\n      }\n    }\n  }\n  \n  if (lastGranulePosition > 0 && sampleRate > 0) {\n    // \u8BA1\u7B97\u65F6\u957F\uFF1A\u603B\u6837\u672C\u6570 / \u91C7\u6837\u7387\n    const duration = lastGranulePosition / sampleRate;\n    return duration;\n  }\n  \n  throw new Error('Could not determine OGG file duration');\n}\n\n/**\n * \u901A\u7528\u97F3\u9891\u65F6\u957F\u89E3\u6790\uFF08\u56DE\u9000\u65B9\u6848\uFF09\n */\nasync function parseGenericAudioDuration(arrayBuffer, mimeType) {\n  // \u5C1D\u8BD5\u89E3\u6790\u4E0D\u540C\u683C\u5F0F\u7684\u97F3\u9891\u6587\u4EF6\n  \n  if (mimeType.includes('flac')) {\n    return await parseFlacDuration(arrayBuffer);\n  } else if (mimeType.includes('aac') || mimeType.includes('m4a') || mimeType.includes('mp4')) {\n    return await parseM4aDuration(arrayBuffer);\n  } else {\n    // \u6700\u540E\u7684\u56DE\u9000\u65B9\u6848\uFF1A\u57FA\u4E8E\u5E73\u5747\u6BD4\u7279\u7387\u7684\u4F30\u7B97\n    // \u8FD9\u4E0D\u662F\u51C6\u786E\u7684\u65B9\u6CD5\uFF0C\u4F46\u603B\u6BD4\u8FD4\u56DE\u6587\u4EF6\u5927\u5C0F\u597D\n    const estimatedBitrate = 128000; // 128kbps\n    const fileSize = arrayBuffer.byteLength;\n    \n    // \u4F30\u7B97\u65F6\u957F\uFF1A\u6587\u4EF6\u5927\u5C0F(\u5B57\u8282) * 8 / \u6BD4\u7279\u7387(bps)\n    const duration = (fileSize * 8) / estimatedBitrate;\n    return duration;\n  }\n}\n\n/**\n * \u89E3\u6790MP3\u5E27\u5934\u4FE1\u606F\n */\nfunction parseMp3FrameHeader(header) {\n  const version = (header >> 19) & 3;\n  const layer = (header >> 17) & 3;\n  const bitrateIndex = (header >> 12) & 15;\n  const sampleRateIndex = (header >> 10) & 3;\n  const padding = (header >> 9) & 1;\n  \n  // MPEG\u7248\u672C\u548C\u5C42\u7EA7\u68C0\u67E5\n  if (version === 1 || layer === 0) return null; // \u4FDD\u7559\u503C\n  \n  // \u6BD4\u7279\u7387\u8868\n  const bitrateTables = {\n    1: { // MPEG-1\n      1: [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 0], // Layer I\n      2: [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 0],   // Layer II\n      3: [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 0]     // Layer III\n    },\n    2: { // MPEG-2\n      1: [0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 0],\n      2: [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0],\n      3: [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0]\n    }\n  };\n  \n  // \u91C7\u6837\u7387\u8868\n  const sampleRateTables = {\n    1: [44100, 48000, 32000, 0], // MPEG-1\n    2: [22050, 24000, 16000, 0], // MPEG-2\n    3: [11025, 12000, 8000, 0]   // MPEG-2.5\n  };\n  \n  const mpegVersion = version === 3 ? 1 : (version === 2 ? 2 : version);\n  const layerNum = 4 - layer;\n  \n  if (!bitrateTables[mpegVersion] || !bitrateTables[mpegVersion][layerNum]) {\n    return null;\n  }\n  \n  if (bitrateIndex === 0 || bitrateIndex === 15 || sampleRateIndex === 3) {\n    return null;\n  }\n  \n  const bitrate = bitrateTables[mpegVersion][layerNum][bitrateIndex];\n  const sampleRate = sampleRateTables[mpegVersion][sampleRateIndex];\n  \n  if (!bitrate || !sampleRate) return null;\n  \n  // \u8BA1\u7B97\u5E27\u5927\u5C0F\n  let frameSize;\n  let samplesPerFrame;\n  \n  if (layerNum === 1) {\n    frameSize = Math.floor((12 * bitrate * 1000 / sampleRate + padding) * 4);\n    samplesPerFrame = 384;\n  } else {\n    frameSize = Math.floor(144 * bitrate * 1000 / sampleRate + padding);\n    samplesPerFrame = mpegVersion === 1 ? 1152 : 576;\n  }\n  \n  return {\n    bitrate: bitrate * 1000,\n    sampleRate: sampleRate,\n    frameSize: frameSize,\n    samplesPerFrame: samplesPerFrame,\n    version: mpegVersion,\n    layer: layerNum\n  };\n}\n\n/**\n * \u89E3\u6790FLAC\u6587\u4EF6\u65F6\u957F\n */\nasync function parseFlacDuration(arrayBuffer) {\n  const view = new DataView(arrayBuffer);\n  \n  // \u68C0\u67E5FLAC\u6587\u4EF6\u5934\n  const flacSignature = String.fromCharCode(...new Uint8Array(arrayBuffer, 0, 4));\n  if (flacSignature !== 'fLaC') {\n    throw new Error('Invalid FLAC file format');\n  }\n  \n  // \u67E5\u627ESTREAMINFO\u5143\u6570\u636E\u5757\n  let offset = 4;\n  while (offset < view.byteLength - 4) {\n    const blockHeader = view.getUint8(offset);\n    const blockType = blockHeader & 0x7F;\n    const isLast = (blockHeader & 0x80) !== 0;\n    const blockSize = (view.getUint8(offset + 1) << 16) |\n                     (view.getUint8(offset + 2) << 8) |\n                     view.getUint8(offset + 3);\n    \n    if (blockType === 0) { // STREAMINFO\u5757\n      if (offset + 4 + 18 <= view.byteLength) {\n        // \u8BFB\u53D6\u91C7\u6837\u7387\uFF0820\u4F4D\uFF0C\u4ECE\u5B57\u828210\u5F00\u59CB\uFF09\n        const sampleRateHigh = view.getUint16(offset + 14, false);\n        const sampleRateLow = view.getUint8(offset + 16);\n        const sampleRate = (sampleRateHigh << 4) | (sampleRateLow >> 4);\n        \n        // \u8BFB\u53D6\u603B\u6837\u672C\u6570\uFF0836\u4F4D\uFF0C\u4ECE\u5B57\u828214\u7684\u4F4E4\u4F4D\u5F00\u59CB\uFF09\n        const totalSamplesHigh = (sampleRateLow & 0x0F) << 32;\n        const totalSamplesLow = view.getUint32(offset + 17, false);\n        const totalSamples = totalSamplesHigh + totalSamplesLow;\n        \n        if (sampleRate > 0 && totalSamples > 0) {\n          const duration = totalSamples / sampleRate;\n          return duration;\n        }\n      }\n      break;\n    }\n    \n    offset += 4 + blockSize;\n    if (isLast) break;\n  }\n  \n  throw new Error('Could not find FLAC STREAMINFO block');\n}\n\n/**\n * \u89E3\u6790M4A/AAC\u6587\u4EF6\u65F6\u957F\n */\nasync function parseM4aDuration(arrayBuffer) {\n  const view = new DataView(arrayBuffer);\n  \n  // \u67E5\u627Emvhd atom\u6765\u83B7\u53D6\u65F6\u957F\u4FE1\u606F\n  let duration = 0;\n  let timeScale = 1;\n  \n  // \u9012\u5F52\u67E5\u627Eatoms\n  function findAtom(offset, targetAtom, maxDepth = 10) {\n    if (maxDepth <= 0 || offset >= view.byteLength - 8) return null;\n    \n    while (offset < view.byteLength - 8) {\n      const atomSize = view.getUint32(offset, false);\n      const atomType = String.fromCharCode(...new Uint8Array(arrayBuffer, offset + 4, 4));\n      \n      if (atomSize < 8) break;\n      \n      if (atomType === targetAtom) {\n        return { offset: offset + 8, size: atomSize - 8 };\n      }\n      \n      // \u5BF9\u4E8E\u5BB9\u5668atom\uFF0C\u9012\u5F52\u641C\u7D22\n      if (['moov', 'trak', 'mdia'].includes(atomType)) {\n        const result = findAtom(offset + 8, targetAtom, maxDepth - 1);\n        if (result) return result;\n      }\n      \n      offset += atomSize;\n    }\n    \n    return null;\n  }\n  \n  // \u67E5\u627Emvhd atom\n  const mvhdAtom = findAtom(0, 'mvhd');\n  if (mvhdAtom && mvhdAtom.size >= 24) {\n    const mvhdOffset = mvhdAtom.offset;\n    const version = view.getUint8(mvhdOffset);\n    \n    if (version === 0) {\n      // \u7248\u672C0\uFF1A32\u4F4D\u65F6\u95F4\u503C\n      timeScale = view.getUint32(mvhdOffset + 12, false);\n      duration = view.getUint32(mvhdOffset + 16, false);\n    } else if (version === 1) {\n      // \u7248\u672C1\uFF1A64\u4F4D\u65F6\u95F4\u503C\n      timeScale = view.getUint32(mvhdOffset + 20, false);\n      // \u8BFB\u53D664\u4F4Dduration\uFF08\u7B80\u5316\u5904\u7406\uFF0C\u53EA\u8BFB\u53D6\u4F4E32\u4F4D\uFF09\n      duration = view.getUint32(mvhdOffset + 28, false);\n    }\n  }\n  \n  if (duration > 0 && timeScale > 0) {\n    return duration / timeScale;\n  }\n  \n  throw new Error('Could not determine M4A/AAC file duration');\n}\n\n/**\n * \u683C\u5F0F\u5316\u6587\u4EF6\u5927\u5C0F\n */\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n/**\n * \u683C\u5F0F\u5316\u65F6\u957F\uFF08\u79FB\u690D\u81EAHTML\u5DE5\u5177\uFF09\n */\nfunction formatDuration(seconds, precisionMode = 'simple') {\n  if (precisionMode === 'precise') {\n    return formatDurationPrecise(seconds);\n  } else {\n    return formatDurationSimple(seconds);\n  }\n}\n\n/**\n * \u7B80\u5355\u683C\u5F0F\u5316\u65F6\u957F\n */\nfunction formatDurationSimple(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  } else {\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  }\n}\n\n/**\n * \u5FAE\u79D2\u7CBE\u5EA6\u683C\u5F0F\u5316\u65F6\u957F\n */\nfunction formatDurationPrecise(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const wholeSecs = Math.floor(seconds % 60);\n  const microseconds = Math.floor((seconds % 1) * 1000000);\n  \n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${wholeSecs.toString().padStart(2, '0')}.${microseconds.toString().padStart(6, '0')}`;\n}\n\n/**\n * \u83B7\u53D6API\u6587\u6863HTML\n */\nfunction getApiDocumentation() {\n  return `<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Audio Duration API Documentation</title>\n    <style>\n        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }\n        .endpoint { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }\n        .method { background: #007bff; color: white; padding: 3px 8px; border-radius: 3px; font-size: 12px; }\n        .method.post { background: #28a745; }\n        .method.get { background: #17a2b8; }\n        code { background: #f8f9fa; padding: 2px 4px; border-radius: 3px; }\n        pre { background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto; }\n    </style>\n</head>\n<body>\n    <h1>\uD83C\uDFB5 Audio Duration API</h1>\n    <p>\u57FA\u4E8EHTML\u5DE5\u5177\u79FB\u690D\u7684\u97F3\u9891\u65F6\u957F\u68C0\u6D4BAPI\u670D\u52A1</p>\n    \n    <div class=\"endpoint\">\n        <h3><span class=\"method post\">POST</span> /api/duration</h3>\n        <p>\u4E0A\u4F20\u97F3\u9891\u6587\u4EF6\u5E76\u83B7\u53D6\u65F6\u957F\u4FE1\u606F\uFF08\u5FAE\u79D2\u7CBE\u5EA6\uFF09</p>\n        \n        <h4>\uD83D\uDD10 \u8BA4\u8BC1\u8981\u6C42\uFF1A</h4>\n        <p>\u6B64\u63A5\u53E3\u9700\u8981API Token\u8BA4\u8BC1\u3002\u8BF7\u5728\u8BF7\u6C42\u5934\u4E2D\u63D0\u4F9B\u4EE5\u4E0B\u4EFB\u4E00\u65B9\u5F0F\uFF1A</p>\n        <ul>\n            <li><code>Authorization: Bearer your-token</code></li>\n            <li><code>X-API-Token: your-token</code></li>\n        </ul>\n        \n        <h4>\u8BF7\u6C42\u53C2\u6570\uFF1A</h4>\n        <ul>\n            <li><code>audio</code> (file, required): \u97F3\u9891\u6587\u4EF6</li>\n            <li><code>precision</code> (string, optional): \u7CBE\u5EA6\u6A21\u5F0F\uFF0C\"simple\" \u6216 \"precise\"\uFF0C\u9ED8\u8BA4\u4E3A \"simple\"</li>\n        </ul>\n        \n        <h4>\u652F\u6301\u7684\u97F3\u9891\u683C\u5F0F\uFF1A</h4>\n        <p>MP3, WAV, OGG, AAC, FLAC, WebM, M4A</p>\n        \n        <h4>\u8FD4\u56DE\u6570\u636E\u8BF4\u660E\uFF1A</h4>\n        <ul>\n            <li><code>duration</code>: \u97F3\u9891\u65F6\u957F\uFF08\u5FAE\u79D2\uFF09\uFF0C1\u79D2 = 1000000\u5FAE\u79D2</li>\n            <li><code>formatted</code>: \u683C\u5F0F\u5316\u7684\u65F6\u957F\u5B57\u7B26\u4E32</li>\n            <li><code>timelines</code>: \u97F3\u9891\u65F6\u95F4\u8F74\u6570\u7EC4\uFF0C\u5305\u542Bstart\u548Cend\uFF08\u5FAE\u79D2\uFF09</li>\n            <li><code>all_timelines</code>: \u603B\u65F6\u957F\u65F6\u95F4\u8F74\u6570\u7EC4</li>\n        </ul>\n        \n        <h4>\u54CD\u5E94\u793A\u4F8B\uFF1A</h4>\n        <pre>{\n  \"success\": true,\n  \"data\": {\n    \"filename\": \"example.mp3\",\n    \"fileSize\": \"3.2 MB\",\n    \"mimeType\": \"audio/mpeg\",\n    \"duration\": 185123456,\n    \"formatted\": \"3:05\",\n    \"precision\": \"simple\",\n    \"timelines\": [\n      {\n        \"start\": 0,\n        \"end\": 185123456\n      }\n    ],\n    \"all_timelines\": [\n      {\n        \"start\": 0,\n        \"end\": 185123456\n      }\n    ],\n    \"timestamp\": \"2024-01-01T12:00:00.000Z\"\n  }\n}</pre>\n    </div>\n    \n    <div class=\"endpoint\">\n        <h3><span class=\"method get\">GET</span> <span class=\"method post\">POST</span> /api/duration-url</h3>\n        <p>\u901A\u8FC7URL\u83B7\u53D6\u8FDC\u7A0B\u97F3\u9891\u65F6\u957F\u4FE1\u606F\uFF08\u5FAE\u79D2\u7CBE\u5EA6\uFF09</p>\n        \n        <h4>\uD83D\uDD10 \u8BA4\u8BC1\u8981\u6C42\uFF1A</h4>\n        <p>\u6B64\u63A5\u53E3\u9700\u8981API Token\u8BA4\u8BC1\u3002\u8BF7\u5728\u8BF7\u6C42\u5934\u4E2D\u63D0\u4F9B\u4EE5\u4E0B\u4EFB\u4E00\u65B9\u5F0F\uFF1A</p>\n        <ul>\n            <li><code>Authorization: Bearer your-token</code></li>\n            <li><code>X-API-Token: your-token</code></li>\n        </ul>\n        \n        <h4>\u8BF7\u6C42\u53C2\u6570\uFF1A</h4>\n        <ul>\n            <li><code>url</code> (string, required): \u97F3\u9891\u6587\u4EF6URL</li>\n            <li><code>precision</code> (string, optional): \u7CBE\u5EA6\u6A21\u5F0F\uFF0C\"simple\" \u6216 \"precise\"\uFF0C\u9ED8\u8BA4\u4E3A \"simple\"</li>\n        </ul>\n        \n        <h4>\u8BF7\u6C42\u65B9\u5F0F\uFF1A</h4>\n        <ul>\n            <li><strong>GET:</strong> \u901A\u8FC7URL\u53C2\u6570\u4F20\u9012 <code>?url=https://example.com/audio.mp3</code></li>\n            <li><strong>POST (JSON):</strong> <code>{\"url\": \"https://example.com/audio.mp3\"}</code></li>\n            <li><strong>POST (Form):</strong> \u8868\u5355\u6570\u636E\u683C\u5F0F</li>\n        </ul>\n        \n        <h4>\u652F\u6301\u7684\u97F3\u9891\u683C\u5F0F\uFF1A</h4>\n        <p>MP3, WAV, OGG, AAC, FLAC, WebM, M4A</p>\n        \n        <h4>\u6587\u4EF6\u5927\u5C0F\u9650\u5236\uFF1A</h4>\n        <p>\u6700\u5927 50MB\uFF0C\u4E0B\u8F7D\u8D85\u65F6 30\u79D2</p>\n        \n        <h4>\u54CD\u5E94\u793A\u4F8B\uFF1A</h4>\n        <pre>{\n  \"success\": true,\n  \"data\": {\n    \"url\": \"https://example.com/audio.mp3\",\n    \"filename\": \"audio.mp3\",\n    \"fileSize\": \"3.2 MB\",\n    \"mimeType\": \"audio/mpeg\",\n    \"duration\": 185123456,\n    \"formatted\": \"3:05\",\n    \"precision\": \"simple\",\n    \"timelines\": [\n      {\n        \"start\": 0,\n        \"end\": 185123456\n      }\n    ],\n    \"all_timelines\": [\n      {\n        \"start\": 0,\n        \"end\": 185123456\n      }\n    ],\n    \"timestamp\": \"2024-01-01T12:00:00.000Z\"\n  }\n}</pre>\n    </div>\n    \n    <div class=\"endpoint\">\n        <h3><span class=\"method get\">GET</span> /health</h3>\n        <p>\u5065\u5EB7\u68C0\u67E5\u7AEF\u70B9</p>\n    </div>\n    \n    <h3>\u4F7F\u7528\u793A\u4F8B\uFF1A</h3>\n    <pre>// JavaScript fetch \u793A\u4F8B\uFF08\u4F7F\u7528Bearer Token\uFF09\nconst formData = new FormData();\nformData.append('audio', audioFile);\nformData.append('precision', 'precise');\n\nfetch('/api/duration', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer your-api-token'\n  },\n  body: formData\n})\n.then(response => response.json())\n.then(data => console.log(data));</pre>\n    \n    <pre>// JavaScript fetch \u793A\u4F8B\uFF08\u4F7F\u7528X-API-Token\uFF09\nconst formData = new FormData();\nformData.append('audio', audioFile);\nformData.append('precision', 'precise');\n\nfetch('/api/duration', {\n  method: 'POST',\n  headers: {\n    'X-API-Token': 'your-api-token'\n  },\n  body: formData\n})\n.then(response => response.json())\n.then(data => console.log(data));</pre>\n    \n    <pre># \u4E0A\u4F20\u6587\u4EF6\u83B7\u53D6\u65F6\u957F\uFF08\u4F7F\u7528Bearer Token\uFF09\ncurl -X POST \\\n  -H \"Authorization: Bearer your-api-token\" \\\n  -F \"audio=@example.mp3\" \\\n  -F \"precision=precise\" \\\n  https://your-worker.your-subdomain.workers.dev/api/duration</pre>\n  \n    <pre># \u4E0A\u4F20\u6587\u4EF6\u83B7\u53D6\u65F6\u957F\uFF08\u4F7F\u7528X-API-Token\uFF09\ncurl -X POST \\\n  -H \"X-API-Token: your-api-token\" \\\n  -F \"audio=@example.mp3\" \\\n  -F \"precision=precise\" \\\n  https://your-worker.your-subdomain.workers.dev/api/duration</pre>\n  \n    <pre># \u901A\u8FC7URL\u83B7\u53D6\u97F3\u9891\u65F6\u957F\uFF08POST JSON\uFF09\ncurl -X POST \\\n  -H \"Authorization: Bearer your-api-token\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"url\": \"https://example.com/sample.mp3\", \"precision\": \"precise\"}' \\\n  https://your-worker.your-subdomain.workers.dev/api/duration-url</pre>\n  \n    <pre># \u901A\u8FC7URL\u83B7\u53D6\u97F3\u9891\u65F6\u957F\uFF08GET\uFF09\ncurl -X GET \\\n  -H \"Authorization: Bearer your-api-token\" \\\n  \"https://your-worker.your-subdomain.workers.dev/api/duration-url?url=https://example.com/sample.mp3&precision=precise\"</pre>\n  \n    <h4>\uD83D\uDD27 Token\u914D\u7F6E\u8BF4\u660E\uFF1A</h4>\n    <p>\u7BA1\u7406\u5458\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u914D\u7F6EAPI Token\uFF1A</p>\n    <ul>\n        <li>\u5728 <code>wrangler.toml</code> \u6587\u4EF6\u4E2D\u8BBE\u7F6E <code>API_TOKEN</code> \u53D8\u91CF</li>\n        <li>\u4F7F\u7528 <code>wrangler secret put API_TOKEN</code> \u547D\u4EE4\u5B89\u5168\u5730\u8BBE\u7F6Etoken\uFF08\u63A8\u8350\uFF09</li>\n    </ul>\n    \n    <h4>\u274C \u9519\u8BEF\u54CD\u5E94\u793A\u4F8B\uFF1A</h4>\n    <pre>// 401 Unauthorized - \u7F3A\u5C11token\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Missing API token. Please provide token in Authorization header (Bearer token) or X-API-Token header\"\n}\n\n// 401 Unauthorized - token\u65E0\u6548\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Invalid API token\"\n}</pre>\n</body>\n</html>`;\n}\n\n/**\n * \u9A8C\u8BC1\u8BF7\u6C42token\n * @param {Request} request - \u8BF7\u6C42\u5BF9\u8C61\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\n * @returns {Object} \u9A8C\u8BC1\u7ED3\u679C\n */\nasync function validateToken(request, env) {\n  // \u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6\u914D\u7F6E\u7684token\n  const validToken = env.API_TOKEN;\n  \n  // \u5982\u679C\u6CA1\u6709\u914D\u7F6Etoken\uFF0C\u5219\u8DF3\u8FC7\u9A8C\u8BC1\n  if (!validToken) {\n    return {\n      valid: false,\n      message: 'API token not configured on server'\n    };\n  }\n  \n  // \u4ECE\u8BF7\u6C42\u5934\u83B7\u53D6token\n  const authHeader = request.headers.get('Authorization');\n  const apiTokenHeader = request.headers.get('X-API-Token');\n  \n  let providedToken = null;\n  \n  // \u652F\u6301\u4E24\u79CDtoken\u4F20\u9012\u65B9\u5F0F\n  if (authHeader) {\n    // Bearer token\u683C\u5F0F\n    if (authHeader.startsWith('Bearer ')) {\n      providedToken = authHeader.substring(7);\n    } else {\n      providedToken = authHeader;\n    }\n  } else if (apiTokenHeader) {\n    // \u76F4\u63A5\u5728X-API-Token\u5934\u4E2D\u4F20\u9012\n    providedToken = apiTokenHeader;\n  }\n  \n  // \u68C0\u67E5\u662F\u5426\u63D0\u4F9B\u4E86token\n  if (!providedToken) {\n    return {\n      valid: false,\n      message: 'Missing API token. Please provide token in Authorization header (Bearer token) or X-API-Token header'\n    };\n  }\n  \n  // \u9A8C\u8BC1token\n  if (providedToken !== validToken) {\n    return {\n      valid: false,\n      message: 'Invalid API token'\n    };\n  }\n  \n  return {\n    valid: true,\n    message: 'Token validated successfully'\n  };\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\git\\\\audiotime\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\git\\\\audiotime\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\git\\\\audiotime\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\git\\\\audiotime\\\\src\\\\index.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\git\\\\audiotime\\\\.wrangler\\\\tmp\\\\bundle-auNAlC\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\git\\\\audiotime\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\git\\\\audiotime\\\\.wrangler\\\\tmp\\\\bundle-auNAlC\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\git\\\\audiotime\\\\.wrangler\\\\tmp\\\\bundle-auNAlC\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
